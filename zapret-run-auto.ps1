# zapret-run-auto.ps1
$installerPath = Join-Path $PSScriptRoot "zapret-installer.ps1"
$configPath = Join-Path $PSScriptRoot "zapret-wifi-history.txt"

& $installerPath

$latestFolder = Get-ChildItem -Path $PSScriptRoot -Directory |
    Where-Object { $_.Name -match '^zapret-(\d+\.\d+\.\d+)$' } |
    Sort-Object { [version]($_.Name -replace '^zapret-', '') } -Descending |
    Select-Object -First 1

if (-not $latestFolder) {
    Write-Warning "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–∞–ø–∫–∞ —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–π –≤–µ—Ä—Å–∏–µ–π"
    exit
}

$batFolder = $latestFolder.FullName
$batFiles = Get-ChildItem -Path $batFolder -Filter '*.bat' | Sort-Object Name

if (-not $batFiles) {
    Write-Warning "‚ùå –í –ø–∞–ø–∫–µ –Ω–µ—Ç .bat —Ñ–∞–π–ª–æ–≤"
    exit
}

$wifiInfo = netsh wlan show interfaces 2>&1
$ssidLine = $wifiInfo | Select-String -Pattern '^\s*SSID\s*:\s*(.+)$'
$ssid = $ssidLine.Matches.Groups[1].Value.Trim()

if (-not $ssid) {
    Write-Warning "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å Wi-Fi —Å–µ—Ç—å. –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –≤—ã–±–æ—Ä –≤—Ä—É—á–Ω—É—é."
    $ssid = "unknown"
} else {
    Write-Host "üì∂ –¢–µ–∫—É—â–∞—è Wi-Fi —Å–µ—Ç—å: $ssid"
}

# –ß–∏—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ, –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º
$wifiMap = @{}
if (Test-Path $configPath) {
    Get-Content $configPath | ForEach-Object {
        if ($_ -match '^(.+?)=(.+)$') {
            $wifiMap[$matches[1]] = $matches[2]
        }
    }
}

if ($wifiMap.ContainsKey($ssid)) {
    $batName = $wifiMap[$ssid]
    $batToRun = $batFiles | Where-Object { $_.Name -eq $batName }

    if ($batToRun) {
        Write-Host "üöÄ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫: $($batToRun.Name)"
        Start-Process -FilePath $batToRun.FullName -WorkingDirectory $batFolder
        exit
    } else {
        Write-Warning "‚ö†Ô∏è –ê—Å—Å–æ—Ü–∏–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª '$batName' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –≤—ã–±–æ—Ä..."
    }
}

# –ó–∞–ø—Ä–æ—Å –≤—Ä—É—á–Ω—É—é
Write-Host "`nüìã –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞:"
for ($i = 0; $i -lt $batFiles.Count; $i++) {
    Write-Host "[$i] $($batFiles[$i].Name)"
}

do {
    $input = Read-Host "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (0-$($batFiles.Count - 1))"
    $isValid = $input -match '^\d+$' -and [int]$input -ge 0 -and [int]$input -lt $batFiles.Count
} while (-not $isValid)

$selectedFile = $batFiles[[int]$input]
Write-Host "`nüöÄ –ó–∞–ø—É—Å–∫–∞–µ–º: $($selectedFile.Name)"
Start-Process -FilePath $selectedFile.FullName -WorkingDirectory $batFolder
